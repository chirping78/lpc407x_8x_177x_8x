; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --debug -c --asm --interleave -o".\FLASH M4\lpc_pinsel.o" --asm_dir=".\FLASH M4\\" --list_dir=".\FLASH M4\\" --depend=".\FLASH M4\lpc_pinsel.d" --cpu=Cortex-M4.fp --apcs=interwork -O0 -I..\..\..\Core\CM3\DeviceSupport\NXP\LPC17xx -I..\..\..\..\Drivers\include -I..\..\..\..\BoardSupport -I..\..\..\..\Core\CMSIS\Include -I..\..\..\..\Core\Device\NXP\LPC407x_8x_177x_8x\Include -IC:\Keil\ARM\RV31\Inc -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC407x_8x_177x_8x -D__MICROLIB -DCORE_M4 --omf_browse=".\FLASH M4\lpc_pinsel.crf" ..\..\..\..\Drivers\source\lpc_pinsel.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  PIN_GetPointer PROC
;;;54      **********************************************************************/
;;;55     static uint32_t * PIN_GetPointer(uint8_t portnum, uint8_t pinnum)
000000  b510              PUSH     {r4,lr}
;;;56     {
000002  4602              MOV      r2,r0
;;;57     	uint32_t *pPIN = NULL;
000004  2000              MOVS     r0,#0
;;;58     	pPIN = (uint32_t *)(LPC_IOCON_BASE + ((portnum * 32 + pinnum)*sizeof(uint32_t)));
000006  eb011342          ADD      r3,r1,r2,LSL #5
00000a  4cf7              LDR      r4,|L1.1000|
00000c  eb040083          ADD      r0,r4,r3,LSL #2
;;;59     	return pPIN;
;;;60     }
000010  bd10              POP      {r4,pc}
;;;61     
                          ENDP

                  PINSEL_GetPinType PROC
;;;78      **********************************************************************/
;;;79     PinSel_PinType PINSEL_GetPinType(uint8_t portnum, uint8_t pinnum)
000012  4602              MOV      r2,r0
;;;80     {
;;;81     	PinSel_PinType Ret = PINSEL_PIN_TYPE_UNKNOWN;
000014  2005              MOVS     r0,#5
;;;82     	switch(portnum)
000016  2a06              CMP      r2,#6
000018  d24a              BCS      |L1.176|
00001a  e8dff002          TBB      [pc,r2]
00001e  032f              DCB      0x03,0x2f
000020  393a3b3d          DCB      0x39,0x3a,0x3b,0x3d
;;;83     	{
;;;84     		case 0:
;;;85     			if((pinnum <=6)||
000024  2906              CMP      r1,#6
000026  dd07              BLE      |L1.56|
;;;86     				((pinnum >= 10)&&(pinnum <=11))||
000028  290a              CMP      r1,#0xa
00002a  db01              BLT      |L1.48|
00002c  290b              CMP      r1,#0xb
00002e  dd03              BLE      |L1.56|
                  |L1.48|
;;;87     				((pinnum >= 14)&&(pinnum <=22)))
000030  290e              CMP      r1,#0xe
000032  db03              BLT      |L1.60|
000034  2916              CMP      r1,#0x16
000036  dc01              BGT      |L1.60|
                  |L1.56|
;;;88     				Ret = PINSEL_PIN_TYPE_D;
000038  2000              MOVS     r0,#0
00003a  e01e              B        |L1.122|
                  |L1.60|
;;;89     			else if ((pinnum == 12)||(pinnum==13)||
00003c  290c              CMP      r1,#0xc
00003e  d005              BEQ      |L1.76|
000040  290d              CMP      r1,#0xd
000042  d003              BEQ      |L1.76|
;;;90     					((pinnum >= 23)&&(pinnum <=26)))
000044  2917              CMP      r1,#0x17
000046  db03              BLT      |L1.80|
000048  291a              CMP      r1,#0x1a
00004a  dc01              BGT      |L1.80|
                  |L1.76|
;;;91     				Ret = PINSEL_PIN_TYPE_A;
00004c  2001              MOVS     r0,#1
00004e  e014              B        |L1.122|
                  |L1.80|
;;;92     			else if ((pinnum == 29) || (pinnum==30)|| (pinnum==31))
000050  291d              CMP      r1,#0x1d
000052  d003              BEQ      |L1.92|
000054  291e              CMP      r1,#0x1e
000056  d001              BEQ      |L1.92|
000058  291f              CMP      r1,#0x1f
00005a  d101              BNE      |L1.96|
                  |L1.92|
;;;93     				Ret = PINSEL_PIN_TYPE_U;
00005c  2002              MOVS     r0,#2
00005e  e00c              B        |L1.122|
                  |L1.96|
;;;94     			else if ((pinnum == 27) || (pinnum==28))
000060  291b              CMP      r1,#0x1b
000062  d001              BEQ      |L1.104|
000064  291c              CMP      r1,#0x1c
000066  d101              BNE      |L1.108|
                  |L1.104|
;;;95     				Ret = PINSEL_PIN_TYPE_I;
000068  2003              MOVS     r0,#3
00006a  e006              B        |L1.122|
                  |L1.108|
;;;96     			else if ((pinnum == 7) || (pinnum==8)|| (pinnum==9))
00006c  2907              CMP      r1,#7
00006e  d003              BEQ      |L1.120|
000070  2908              CMP      r1,#8
000072  d001              BEQ      |L1.120|
000074  2909              CMP      r1,#9
000076  d100              BNE      |L1.122|
                  |L1.120|
;;;97     				Ret = PINSEL_PIN_TYPE_W;
000078  2004              MOVS     r0,#4
                  |L1.122|
;;;98     			break;
00007a  e01a              B        |L1.178|
;;;99     		case 1:
;;;100    			if(pinnum <=29)
00007c  291d              CMP      r1,#0x1d
00007e  dc01              BGT      |L1.132|
;;;101    				Ret = PINSEL_PIN_TYPE_D;
000080  2000              MOVS     r0,#0
000082  e004              B        |L1.142|
                  |L1.132|
;;;102    			else if ((pinnum == 30) || (pinnum==31))
000084  291e              CMP      r1,#0x1e
000086  d001              BEQ      |L1.140|
000088  291f              CMP      r1,#0x1f
00008a  d100              BNE      |L1.142|
                  |L1.140|
;;;103    				Ret = PINSEL_PIN_TYPE_A;
00008c  2001              MOVS     r0,#1
                  |L1.142|
;;;104    			break;
00008e  e010              B        |L1.178|
;;;105    		case 2:
;;;106    		case 3:
000090  bf00              NOP      
;;;107    		case 4:
000092  bf00              NOP      
;;;108    			Ret = PINSEL_PIN_TYPE_D;
000094  2000              MOVS     r0,#0
;;;109    			break;
000096  e00c              B        |L1.178|
;;;110    		case 5:
;;;111    			if((pinnum <=1)||
000098  2901              CMP      r1,#1
00009a  dd01              BLE      |L1.160|
;;;112    				(pinnum == 4))
00009c  2904              CMP      r1,#4
00009e  d101              BNE      |L1.164|
                  |L1.160|
;;;113    				Ret = PINSEL_PIN_TYPE_D;
0000a0  2000              MOVS     r0,#0
0000a2  e004              B        |L1.174|
                  |L1.164|
;;;114    			else if ((pinnum == 2) || (pinnum==3))
0000a4  2902              CMP      r1,#2
0000a6  d001              BEQ      |L1.172|
0000a8  2903              CMP      r1,#3
0000aa  d100              BNE      |L1.174|
                  |L1.172|
;;;115    				Ret = PINSEL_PIN_TYPE_I;
0000ac  2003              MOVS     r0,#3
                  |L1.174|
;;;116    			break;
0000ae  e000              B        |L1.178|
                  |L1.176|
;;;117    		default:
;;;118    			break;
0000b0  bf00              NOP      
                  |L1.178|
0000b2  bf00              NOP                            ;98
;;;119    	}
;;;120    
;;;121    	return Ret;
;;;122    }
0000b4  4770              BX       lr
;;;123    
                          ENDP

                  PINSEL_ConfigPin PROC
;;;137     **********************************************************************/
;;;138    PINSEL_RET_CODE PINSEL_ConfigPin ( uint8_t portnum, uint8_t pinnum, uint8_t funcnum)
0000b6  e92d41f0          PUSH     {r4-r8,lr}
;;;139    {
0000ba  4606              MOV      r6,r0
0000bc  4688              MOV      r8,r1
0000be  4615              MOV      r5,r2
;;;140    	uint32_t *pPIN = NULL;
0000c0  2400              MOVS     r4,#0
;;;141    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0000c2  4641              MOV      r1,r8
0000c4  4630              MOV      r0,r6
0000c6  f7fffffe          BL       PINSEL_GetPinType
0000ca  4607              MOV      r7,r0
;;;142    
;;;143    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
0000cc  2f05              CMP      r7,#5
0000ce  d102              BNE      |L1.214|
;;;144    		return PINSEL_RET_INVALID_PIN;
0000d0  48c6              LDR      r0,|L1.1004|
                  |L1.210|
;;;145    	
;;;146    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;147    	*pPIN &= ~IOCON_FUNC_MASK;//Clear function bits
;;;148    	*pPIN |= funcnum&IOCON_FUNC_MASK;
;;;149    
;;;150    	return PINSEL_RET_OK;
;;;151    }
0000d2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.214|
0000d6  4641              MOV      r1,r8                 ;146
0000d8  4630              MOV      r0,r6                 ;146
0000da  f7fffffe          BL       PIN_GetPointer
0000de  4604              MOV      r4,r0                 ;146
0000e0  6820              LDR      r0,[r4,#0]            ;147
0000e2  f0200007          BIC      r0,r0,#7              ;147
0000e6  6020              STR      r0,[r4,#0]            ;147
0000e8  f0050107          AND      r1,r5,#7              ;148
0000ec  6820              LDR      r0,[r4,#0]            ;148
0000ee  4308              ORRS     r0,r0,r1              ;148
0000f0  6020              STR      r0,[r4,#0]            ;148
0000f2  2000              MOVS     r0,#0                 ;150
0000f4  e7ed              B        |L1.210|
;;;152    
                          ENDP

                  PINSEL_SetPinMode PROC
;;;167     **********************************************************************/
;;;168    PINSEL_RET_CODE PINSEL_SetPinMode ( uint8_t portnum, uint8_t pinnum, PinSel_BasicMode modenum)
0000f6  e92d41f0          PUSH     {r4-r8,lr}
;;;169    {
0000fa  4607              MOV      r7,r0
0000fc  4688              MOV      r8,r1
0000fe  4616              MOV      r6,r2
;;;170    	uint32_t *pPIN = NULL;
000100  2400              MOVS     r4,#0
;;;171    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000102  4641              MOV      r1,r8
000104  4638              MOV      r0,r7
000106  f7fffffe          BL       PINSEL_GetPinType
00010a  4605              MOV      r5,r0
;;;172    
;;;173    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
00010c  2d05              CMP      r5,#5
00010e  d102              BNE      |L1.278|
;;;174    		return PINSEL_RET_INVALID_PIN;
000110  48b6              LDR      r0,|L1.1004|
                  |L1.274|
;;;175    	if((type != PINSEL_PIN_TYPE_D )&&
;;;176    		(type != PINSEL_PIN_TYPE_A )&&
;;;177    		(type != PINSEL_PIN_TYPE_W))
;;;178    		return PINSEL_RET_NOT_SUPPORT;
;;;179    	
;;;180    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;181    	*(uint32_t *)pPIN &= ~(IOCON_MODE_MASK);//Clear function bits
;;;182    	*(uint32_t *)pPIN |= (modenum << IOCON_MODE_POS)&IOCON_MODE_MASK;
;;;183    
;;;184    	return PINSEL_RET_OK;
;;;185    }
000112  e8bd81f0          POP      {r4-r8,pc}
                  |L1.278|
000116  b135              CBZ      r5,|L1.294|
000118  2d01              CMP      r5,#1                 ;176
00011a  d004              BEQ      |L1.294|
00011c  2d04              CMP      r5,#4                 ;177
00011e  d002              BEQ      |L1.294|
000120  48b2              LDR      r0,|L1.1004|
000122  1c40              ADDS     r0,r0,#1              ;178
000124  e7f5              B        |L1.274|
                  |L1.294|
000126  4641              MOV      r1,r8                 ;180
000128  4638              MOV      r0,r7                 ;180
00012a  f7fffffe          BL       PIN_GetPointer
00012e  4604              MOV      r4,r0                 ;180
000130  6820              LDR      r0,[r4,#0]            ;181
000132  f0200018          BIC      r0,r0,#0x18           ;181
000136  6020              STR      r0,[r4,#0]            ;181
000138  2118              MOVS     r1,#0x18              ;182
00013a  ea0101c6          AND      r1,r1,r6,LSL #3       ;182
00013e  6820              LDR      r0,[r4,#0]            ;182
000140  4308              ORRS     r0,r0,r1              ;182
000142  6020              STR      r0,[r4,#0]            ;182
000144  2000              MOVS     r0,#0                 ;184
000146  e7e4              B        |L1.274|
;;;186    
                          ENDP

                  PINSEL_SetHysMode PROC
;;;198     **********************************************************************/
;;;199    PINSEL_RET_CODE PINSEL_SetHysMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
000148  e92d41f0          PUSH     {r4-r8,lr}
;;;200    {
00014c  4607              MOV      r7,r0
00014e  4688              MOV      r8,r1
000150  4616              MOV      r6,r2
;;;201    	uint32_t *pPIN = NULL;
000152  2400              MOVS     r4,#0
;;;202    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000154  4641              MOV      r1,r8
000156  4638              MOV      r0,r7
000158  f7fffffe          BL       PINSEL_GetPinType
00015c  4605              MOV      r5,r0
;;;203    
;;;204    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
00015e  2d05              CMP      r5,#5
000160  d102              BNE      |L1.360|
;;;205    		return PINSEL_RET_INVALID_PIN;
000162  48a2              LDR      r0,|L1.1004|
                  |L1.356|
;;;206    	if((type != PINSEL_PIN_TYPE_D )&&
;;;207    		(type != PINSEL_PIN_TYPE_W))
;;;208    		return PINSEL_RET_NOT_SUPPORT;
;;;209    	
;;;210    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;211    	if(NewState == DISABLE)
;;;212    	{
;;;213    		*(uint32_t *)pPIN &= ~IOCON_HYS_ENABLE;//Clear hys bits
;;;214    	}
;;;215    	else
;;;216    		*(uint32_t *)pPIN |= IOCON_HYS_ENABLE;
;;;217    
;;;218    	return PINSEL_RET_OK;
;;;219    }
000164  e8bd81f0          POP      {r4-r8,pc}
                  |L1.360|
000168  b125              CBZ      r5,|L1.372|
00016a  2d04              CMP      r5,#4                 ;207
00016c  d002              BEQ      |L1.372|
00016e  489f              LDR      r0,|L1.1004|
000170  1c40              ADDS     r0,r0,#1              ;208
000172  e7f7              B        |L1.356|
                  |L1.372|
000174  4641              MOV      r1,r8                 ;210
000176  4638              MOV      r0,r7                 ;210
000178  f7fffffe          BL       PIN_GetPointer
00017c  4604              MOV      r4,r0                 ;210
00017e  b926              CBNZ     r6,|L1.394|
000180  6820              LDR      r0,[r4,#0]            ;213
000182  f0200020          BIC      r0,r0,#0x20           ;213
000186  6020              STR      r0,[r4,#0]            ;213
000188  e003              B        |L1.402|
                  |L1.394|
00018a  6820              LDR      r0,[r4,#0]            ;216
00018c  f0400020          ORR      r0,r0,#0x20           ;216
000190  6020              STR      r0,[r4,#0]            ;216
                  |L1.402|
000192  2000              MOVS     r0,#0                 ;218
000194  e7e6              B        |L1.356|
;;;220    /*********************************************************************//**
                          ENDP

                  PINSEL_SetInvertInput PROC
;;;231     **********************************************************************/
;;;232    PINSEL_RET_CODE PINSEL_SetInvertInput(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
000196  e92d41f0          PUSH     {r4-r8,lr}
;;;233    {
00019a  4607              MOV      r7,r0
00019c  4688              MOV      r8,r1
00019e  4615              MOV      r5,r2
;;;234    	uint32_t *pPIN = NULL;
0001a0  2400              MOVS     r4,#0
;;;235    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0001a2  4641              MOV      r1,r8
0001a4  4638              MOV      r0,r7
0001a6  f7fffffe          BL       PINSEL_GetPinType
0001aa  4606              MOV      r6,r0
;;;236    
;;;237    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
0001ac  2e05              CMP      r6,#5
0001ae  d102              BNE      |L1.438|
;;;238    		return PINSEL_RET_INVALID_PIN;
0001b0  488e              LDR      r0,|L1.1004|
                  |L1.434|
;;;239    	if(type== PINSEL_PIN_TYPE_U)
;;;240    		return PINSEL_RET_NOT_SUPPORT;
;;;241    	
;;;242    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;243    	if(NewState == DISABLE)
;;;244    	{
;;;245    		*(uint32_t *)pPIN &= ~IOCON_INVERT_INPUT;//Clear hys bits
;;;246    	}
;;;247    	else
;;;248    		*(uint32_t *)pPIN |= IOCON_INVERT_INPUT;
;;;249    
;;;250    	return PINSEL_RET_OK;
;;;251    }
0001b2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.438|
0001b6  2e02              CMP      r6,#2                 ;239
0001b8  d102              BNE      |L1.448|
0001ba  488c              LDR      r0,|L1.1004|
0001bc  1c40              ADDS     r0,r0,#1              ;240
0001be  e7f8              B        |L1.434|
                  |L1.448|
0001c0  4641              MOV      r1,r8                 ;242
0001c2  4638              MOV      r0,r7                 ;242
0001c4  f7fffffe          BL       PIN_GetPointer
0001c8  4604              MOV      r4,r0                 ;242
0001ca  b925              CBNZ     r5,|L1.470|
0001cc  6820              LDR      r0,[r4,#0]            ;245
0001ce  f0200040          BIC      r0,r0,#0x40           ;245
0001d2  6020              STR      r0,[r4,#0]            ;245
0001d4  e003              B        |L1.478|
                  |L1.470|
0001d6  6820              LDR      r0,[r4,#0]            ;248
0001d8  f0400040          ORR      r0,r0,#0x40           ;248
0001dc  6020              STR      r0,[r4,#0]            ;248
                  |L1.478|
0001de  2000              MOVS     r0,#0                 ;250
0001e0  e7e7              B        |L1.434|
;;;252    
                          ENDP

                  PINSEL_SetSlewMode PROC
;;;264     **********************************************************************/
;;;265    PINSEL_RET_CODE PINSEL_SetSlewMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
0001e2  e92d41f0          PUSH     {r4-r8,lr}
;;;266    {
0001e6  4607              MOV      r7,r0
0001e8  4688              MOV      r8,r1
0001ea  4616              MOV      r6,r2
;;;267    	uint32_t *pPIN = NULL;
0001ec  2400              MOVS     r4,#0
;;;268    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0001ee  4641              MOV      r1,r8
0001f0  4638              MOV      r0,r7
0001f2  f7fffffe          BL       PINSEL_GetPinType
0001f6  4605              MOV      r5,r0
;;;269    
;;;270    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
0001f8  2d05              CMP      r5,#5
0001fa  d102              BNE      |L1.514|
;;;271    		return PINSEL_RET_INVALID_PIN;
0001fc  487b              LDR      r0,|L1.1004|
                  |L1.510|
;;;272    	if((type!= PINSEL_PIN_TYPE_D) &&
;;;273    		(type!= PINSEL_PIN_TYPE_W))
;;;274    		return PINSEL_RET_NOT_SUPPORT;
;;;275    	
;;;276    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;277    	if(NewState == DISABLE)
;;;278    	{
;;;279    		*(uint32_t *)pPIN &= ~IOCON_SLEW_ENABLE;//Clear hys bits
;;;280    	}
;;;281    	else
;;;282    		*(uint32_t *)pPIN |= IOCON_SLEW_ENABLE;
;;;283    
;;;284        return PINSEL_RET_OK;
;;;285    }
0001fe  e8bd81f0          POP      {r4-r8,pc}
                  |L1.514|
000202  b125              CBZ      r5,|L1.526|
000204  2d04              CMP      r5,#4                 ;273
000206  d002              BEQ      |L1.526|
000208  4878              LDR      r0,|L1.1004|
00020a  1c40              ADDS     r0,r0,#1              ;274
00020c  e7f7              B        |L1.510|
                  |L1.526|
00020e  4641              MOV      r1,r8                 ;276
000210  4638              MOV      r0,r7                 ;276
000212  f7fffffe          BL       PIN_GetPointer
000216  4604              MOV      r4,r0                 ;276
000218  b926              CBNZ     r6,|L1.548|
00021a  6820              LDR      r0,[r4,#0]            ;279
00021c  f4207000          BIC      r0,r0,#0x200          ;279
000220  6020              STR      r0,[r4,#0]            ;279
000222  e003              B        |L1.556|
                  |L1.548|
000224  6820              LDR      r0,[r4,#0]            ;282
000226  f4407000          ORR      r0,r0,#0x200          ;282
00022a  6020              STR      r0,[r4,#0]            ;282
                  |L1.556|
00022c  2000              MOVS     r0,#0                 ;284
00022e  e7e6              B        |L1.510|
;;;286    
                          ENDP

                  PINSEL_SetI2CFilter PROC
;;;503     **********************************************************************/
;;;504    PINSEL_RET_CODE PINSEL_SetI2CFilter (uint8_t portnum, uint8_t pinnum, uint8_t enable)
000230  e92d41f0          PUSH     {r4-r8,lr}
;;;505    {
000234  4607              MOV      r7,r0
000236  4688              MOV      r8,r1
000238  4615              MOV      r5,r2
;;;506    	uint32_t *pPIN = NULL;
00023a  2400              MOVS     r4,#0
;;;507    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
00023c  4641              MOV      r1,r8
00023e  4638              MOV      r0,r7
000240  f7fffffe          BL       PINSEL_GetPinType
000244  4606              MOV      r6,r0
;;;508    	
;;;509    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
000246  2e05              CMP      r6,#5
000248  d102              BNE      |L1.592|
;;;510    		return PINSEL_RET_INVALID_PIN;
00024a  4868              LDR      r0,|L1.1004|
                  |L1.588|
;;;511    	if(type != PINSEL_PIN_TYPE_I)
;;;512    		return PINSEL_RET_NOT_SUPPORT;
;;;513    
;;;514    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;515    
;;;516    
;;;517    	if(enable)
;;;518    	{
;;;519    		*(uint32_t *)pPIN &= ~(IOCON_HS_MASK);//Clear 8th bit to 0
;;;520    	}
;;;521    	else
;;;522    	{
;;;523    		*(uint32_t *)pPIN |= (IOCON_I2C_FILTER_DISABLE);//Set 8th bit to one
;;;524    	}
;;;525    
;;;526    
;;;527    	return PINSEL_RET_OK;
;;;528    }
00024c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.592|
000250  2e03              CMP      r6,#3                 ;511
000252  d002              BEQ      |L1.602|
000254  4865              LDR      r0,|L1.1004|
000256  1c40              ADDS     r0,r0,#1              ;512
000258  e7f8              B        |L1.588|
                  |L1.602|
00025a  4641              MOV      r1,r8                 ;514
00025c  4638              MOV      r0,r7                 ;514
00025e  f7fffffe          BL       PIN_GetPointer
000262  4604              MOV      r4,r0                 ;514
000264  b125              CBZ      r5,|L1.624|
000266  6820              LDR      r0,[r4,#0]            ;519
000268  f4207080          BIC      r0,r0,#0x100          ;519
00026c  6020              STR      r0,[r4,#0]            ;519
00026e  e003              B        |L1.632|
                  |L1.624|
000270  6820              LDR      r0,[r4,#0]            ;523
000272  f4407080          ORR      r0,r0,#0x100          ;523
000276  6020              STR      r0,[r4,#0]            ;523
                  |L1.632|
000278  2000              MOVS     r0,#0                 ;527
00027a  e7e7              B        |L1.588|
;;;529    
                          ENDP

                  PINSEL_SetI2CMode PROC
;;;299     **********************************************************************/
;;;300    PINSEL_RET_CODE PINSEL_SetI2CMode(uint8_t portnum, uint8_t pinnum, PinSel_I2cMode I2CMode)
00027c  e92d41f0          PUSH     {r4-r8,lr}
;;;301    {
000280  4607              MOV      r7,r0
000282  4688              MOV      r8,r1
000284  4615              MOV      r5,r2
;;;302    	uint32_t *pPIN = NULL;
000286  2400              MOVS     r4,#0
;;;303    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000288  4641              MOV      r1,r8
00028a  4638              MOV      r0,r7
00028c  f7fffffe          BL       PINSEL_GetPinType
000290  4606              MOV      r6,r0
;;;304    
;;;305    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
000292  2e05              CMP      r6,#5
000294  d102              BNE      |L1.668|
;;;306    		return PINSEL_RET_INVALID_PIN;
000296  4855              LDR      r0,|L1.1004|
                  |L1.664|
;;;307    	if(type != PINSEL_PIN_TYPE_I )
;;;308    		return PINSEL_RET_NOT_SUPPORT;
;;;309    	
;;;310    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;311    
;;;312    	switch(I2CMode)
;;;313    	{
;;;314    		// Standard/Fast Mode I2C: HS = HIDRIVE = 0
;;;315    		case PINSEL_I2CMODE_FAST_STANDARD: 
;;;316    			PINSEL_SetI2CFilter(portnum,pinnum,ENABLE);
;;;317    			*(uint32_t *)pPIN &= ~(IOCON_I2CMODE_FASTPLUS);
;;;318    			break;
;;;319    
;;;320    		// Non-I2C: HS = 1, HIDRIVE = 0
;;;321    		case PINSEL_I2CMODE_OPENDRAINIO:
;;;322    			PINSEL_SetI2CFilter(portnum,pinnum,DISABLE);
;;;323    			*(uint32_t *)pPIN &= ~(IOCON_I2CMODE_FASTPLUS);
;;;324    			break;
;;;325    
;;;326    		// Fast Mode Plus I2C: HS = 0, HIDRIVE =1
;;;327    		case PINSEL_I2CMODE_FASTMODEPLUS:	
;;;328    			PINSEL_SetI2CFilter(portnum,pinnum,ENABLE);
;;;329    			*(uint32_t *)pPIN |= (IOCON_I2CMODE_FASTPLUS);
;;;330    			break;
;;;331    		default:
;;;332    			return PINSEL_RET_ERR;
;;;333    	}
;;;334    
;;;335    	return PINSEL_RET_OK;
;;;336    }
000298  e8bd81f0          POP      {r4-r8,pc}
                  |L1.668|
00029c  2e03              CMP      r6,#3                 ;307
00029e  d002              BEQ      |L1.678|
0002a0  4852              LDR      r0,|L1.1004|
0002a2  1c40              ADDS     r0,r0,#1              ;308
0002a4  e7f8              B        |L1.664|
                  |L1.678|
0002a6  4641              MOV      r1,r8                 ;310
0002a8  4638              MOV      r0,r7                 ;310
0002aa  f7fffffe          BL       PIN_GetPointer
0002ae  4604              MOV      r4,r0                 ;310
0002b0  b125              CBZ      r5,|L1.700|
0002b2  2d01              CMP      r5,#1                 ;312
0002b4  d00c              BEQ      |L1.720|
0002b6  2d02              CMP      r5,#2                 ;312
0002b8  d11e              BNE      |L1.760|
0002ba  e013              B        |L1.740|
                  |L1.700|
0002bc  2201              MOVS     r2,#1                 ;316
0002be  4641              MOV      r1,r8                 ;316
0002c0  4638              MOV      r0,r7                 ;316
0002c2  f7fffffe          BL       PINSEL_SetI2CFilter
0002c6  6820              LDR      r0,[r4,#0]            ;317
0002c8  f4207000          BIC      r0,r0,#0x200          ;317
0002cc  6020              STR      r0,[r4,#0]            ;317
0002ce  e016              B        |L1.766|
                  |L1.720|
0002d0  2200              MOVS     r2,#0                 ;322
0002d2  4641              MOV      r1,r8                 ;322
0002d4  4638              MOV      r0,r7                 ;322
0002d6  f7fffffe          BL       PINSEL_SetI2CFilter
0002da  6820              LDR      r0,[r4,#0]            ;323
0002dc  f4207000          BIC      r0,r0,#0x200          ;323
0002e0  6020              STR      r0,[r4,#0]            ;323
0002e2  e00c              B        |L1.766|
                  |L1.740|
0002e4  2201              MOVS     r2,#1                 ;328
0002e6  4641              MOV      r1,r8                 ;328
0002e8  4638              MOV      r0,r7                 ;328
0002ea  f7fffffe          BL       PINSEL_SetI2CFilter
0002ee  6820              LDR      r0,[r4,#0]            ;329
0002f0  f4407000          ORR      r0,r0,#0x200          ;329
0002f4  6020              STR      r0,[r4,#0]            ;329
0002f6  e002              B        |L1.766|
                  |L1.760|
0002f8  f04f30ff          MOV      r0,#0xffffffff        ;332
0002fc  e7cc              B        |L1.664|
                  |L1.766|
0002fe  bf00              NOP                            ;318
000300  2000              MOVS     r0,#0                 ;335
000302  e7c9              B        |L1.664|
;;;337    
                          ENDP

                  PINSEL_SetOpenDrainMode PROC
;;;349     **********************************************************************/
;;;350    PINSEL_RET_CODE PINSEL_SetOpenDrainMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
000304  e92d41f0          PUSH     {r4-r8,lr}
;;;351    {
000308  4607              MOV      r7,r0
00030a  4688              MOV      r8,r1
00030c  4616              MOV      r6,r2
;;;352    	uint32_t *pPIN = NULL;
00030e  2400              MOVS     r4,#0
;;;353    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000310  4641              MOV      r1,r8
000312  4638              MOV      r0,r7
000314  f7fffffe          BL       PINSEL_GetPinType
000318  4605              MOV      r5,r0
;;;354    
;;;355    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
00031a  2d05              CMP      r5,#5
00031c  d102              BNE      |L1.804|
;;;356    		return PINSEL_RET_INVALID_PIN;
00031e  4833              LDR      r0,|L1.1004|
                  |L1.800|
;;;357    	if((type != PINSEL_PIN_TYPE_D ) &&
;;;358    		(type != PINSEL_PIN_TYPE_A ) &&
;;;359    		(type != PINSEL_PIN_TYPE_W ))
;;;360    		return PINSEL_RET_NOT_SUPPORT;
;;;361    	
;;;362    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;363    	if(NewState == DISABLE)
;;;364    	{
;;;365    		*(uint32_t *)pPIN &= ~IOCON_OPENDRAIN_MODE;//Clear hys bits
;;;366    	}
;;;367    	else
;;;368    	{
;;;369    		*(uint32_t *)pPIN |= IOCON_OPENDRAIN_MODE;
;;;370    	}
;;;371    	return PINSEL_RET_OK;
;;;372    }
000320  e8bd81f0          POP      {r4-r8,pc}
                  |L1.804|
000324  b135              CBZ      r5,|L1.820|
000326  2d01              CMP      r5,#1                 ;358
000328  d004              BEQ      |L1.820|
00032a  2d04              CMP      r5,#4                 ;359
00032c  d002              BEQ      |L1.820|
00032e  482f              LDR      r0,|L1.1004|
000330  1c40              ADDS     r0,r0,#1              ;360
000332  e7f5              B        |L1.800|
                  |L1.820|
000334  4641              MOV      r1,r8                 ;362
000336  4638              MOV      r0,r7                 ;362
000338  f7fffffe          BL       PIN_GetPointer
00033c  4604              MOV      r4,r0                 ;362
00033e  b926              CBNZ     r6,|L1.842|
000340  6820              LDR      r0,[r4,#0]            ;365
000342  f4206080          BIC      r0,r0,#0x400          ;365
000346  6020              STR      r0,[r4,#0]            ;365
000348  e003              B        |L1.850|
                  |L1.842|
00034a  6820              LDR      r0,[r4,#0]            ;369
00034c  f4406080          ORR      r0,r0,#0x400          ;369
000350  6020              STR      r0,[r4,#0]            ;369
                  |L1.850|
000352  2000              MOVS     r0,#0                 ;371
000354  e7e4              B        |L1.800|
;;;373    
                          ENDP

                  PINSEL_SetAnalogPinMode PROC
;;;385     **********************************************************************/
;;;386    PINSEL_RET_CODE PINSEL_SetAnalogPinMode (uint8_t portnum, uint8_t pinnum, uint8_t enable)
000356  e92d41f0          PUSH     {r4-r8,lr}
;;;387    {
00035a  4607              MOV      r7,r0
00035c  4688              MOV      r8,r1
00035e  4615              MOV      r5,r2
;;;388    	uint32_t *pPIN = NULL;
000360  2400              MOVS     r4,#0
;;;389    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000362  4641              MOV      r1,r8
000364  4638              MOV      r0,r7
000366  f7fffffe          BL       PINSEL_GetPinType
00036a  4606              MOV      r6,r0
;;;390    
;;;391    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
00036c  2e05              CMP      r6,#5
00036e  d102              BNE      |L1.886|
;;;392    		return PINSEL_RET_INVALID_PIN;
000370  481e              LDR      r0,|L1.1004|
                  |L1.882|
;;;393    	if(type != PINSEL_PIN_TYPE_A )
;;;394    		return PINSEL_RET_NOT_SUPPORT;
;;;395    
;;;396    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;397    
;;;398    	if(enable)
;;;399    	{
;;;400    		*(uint32_t *)pPIN &= ~(IOCON_DIGITIAL_MODE);
;;;401    	}
;;;402    	else
;;;403    	{
;;;404    		*(uint32_t *)pPIN |= IOCON_DIGITIAL_MODE;//Set 7th bit to one
;;;405    	}
;;;406    
;;;407    	return PINSEL_RET_OK;
;;;408    }
000372  e8bd81f0          POP      {r4-r8,pc}
                  |L1.886|
000376  2e01              CMP      r6,#1                 ;393
000378  d002              BEQ      |L1.896|
00037a  481c              LDR      r0,|L1.1004|
00037c  1c40              ADDS     r0,r0,#1              ;394
00037e  e7f8              B        |L1.882|
                  |L1.896|
000380  4641              MOV      r1,r8                 ;396
000382  4638              MOV      r0,r7                 ;396
000384  f7fffffe          BL       PIN_GetPointer
000388  4604              MOV      r4,r0                 ;396
00038a  b125              CBZ      r5,|L1.918|
00038c  6820              LDR      r0,[r4,#0]            ;400
00038e  f0200080          BIC      r0,r0,#0x80           ;400
000392  6020              STR      r0,[r4,#0]            ;400
000394  e003              B        |L1.926|
                  |L1.918|
000396  6820              LDR      r0,[r4,#0]            ;404
000398  f0400080          ORR      r0,r0,#0x80           ;404
00039c  6020              STR      r0,[r4,#0]            ;404
                  |L1.926|
00039e  2000              MOVS     r0,#0                 ;407
0003a0  e7e7              B        |L1.882|
;;;409    
                          ENDP

                  PINSEL_DacEnable PROC
;;;423     **********************************************************************/
;;;424    PINSEL_RET_CODE PINSEL_DacEnable (uint8_t portnum, uint8_t pinnum, uint8_t enable)
0003a2  e92d41f0          PUSH     {r4-r8,lr}
;;;425    {
0003a6  4605              MOV      r5,r0
0003a8  460e              MOV      r6,r1
0003aa  4617              MOV      r7,r2
;;;426    	uint32_t *pPIN = NULL;
0003ac  2400              MOVS     r4,#0
;;;427    	
;;;428    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0003ae  4631              MOV      r1,r6
0003b0  4628              MOV      r0,r5
0003b2  f7fffffe          BL       PINSEL_GetPinType
0003b6  4680              MOV      r8,r0
;;;429    	
;;;430    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
0003b8  f1b80f05          CMP      r8,#5
0003bc  d102              BNE      |L1.964|
;;;431    		return PINSEL_RET_INVALID_PIN;
0003be  480b              LDR      r0,|L1.1004|
                  |L1.960|
;;;432    
;;;433    	// This setting is only for DAC pin (output pin)
;;;434    	if(!((portnum == 0) && (pinnum == 26)))
;;;435    	{
;;;436    		return PINSEL_RET_NOT_SUPPORT;
;;;437    	}
;;;438    
;;;439    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;440    
;;;441    	if(enable)
;;;442    	{
;;;443    		*(uint32_t *)pPIN |= IOCON_DAC_ENABLE;//Set 16th bit to one
;;;444    	}
;;;445    	else
;;;446    	{
;;;447    		*(uint32_t *)pPIN &= ~IOCON_DAC_ENABLE;//Set 16th bit to one
;;;448    
;;;449    	}
;;;450    
;;;451    	return PINSEL_RET_OK;
;;;452    }
0003c0  e8bd81f0          POP      {r4-r8,pc}
                  |L1.964|
0003c4  b90d              CBNZ     r5,|L1.970|
0003c6  2e1a              CMP      r6,#0x1a              ;434
0003c8  d002              BEQ      |L1.976|
                  |L1.970|
0003ca  4808              LDR      r0,|L1.1004|
0003cc  1c40              ADDS     r0,r0,#1              ;436
0003ce  e7f7              B        |L1.960|
                  |L1.976|
0003d0  4631              MOV      r1,r6                 ;439
0003d2  4628              MOV      r0,r5                 ;439
0003d4  f7fffffe          BL       PIN_GetPointer
0003d8  4604              MOV      r4,r0                 ;439
0003da  b14f              CBZ      r7,|L1.1008|
0003dc  6820              LDR      r0,[r4,#0]            ;443
0003de  f4403080          ORR      r0,r0,#0x10000        ;443
0003e2  6020              STR      r0,[r4,#0]            ;443
0003e4  e008              B        |L1.1016|
0003e6  0000              DCW      0x0000
                  |L1.1000|
                          DCD      0x4002c000
                  |L1.1004|
                          DCD      0x10000001
                  |L1.1008|
0003f0  6820              LDR      r0,[r4,#0]            ;447
0003f2  f4203080          BIC      r0,r0,#0x10000        ;447
0003f6  6020              STR      r0,[r4,#0]            ;447
                  |L1.1016|
0003f8  2000              MOVS     r0,#0                 ;451
0003fa  e7e1              B        |L1.960|
;;;453    
                          ENDP

                  PINSEL_SetFilter PROC
;;;465     **********************************************************************/
;;;466    PINSEL_RET_CODE PINSEL_SetFilter (uint8_t portnum, uint8_t pinnum, uint8_t enable)
0003fc  e92d41f0          PUSH     {r4-r8,lr}
;;;467    {
000400  4607              MOV      r7,r0
000402  4688              MOV      r8,r1
000404  4616              MOV      r6,r2
;;;468    	uint32_t *pPIN = NULL;
000406  2400              MOVS     r4,#0
;;;469    	PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000408  4641              MOV      r1,r8
00040a  4638              MOV      r0,r7
00040c  f7fffffe          BL       PINSEL_GetPinType
000410  4605              MOV      r5,r0
;;;470    	
;;;471    	if(type == PINSEL_PIN_TYPE_UNKNOWN)
000412  2d05              CMP      r5,#5
000414  d102              BNE      |L1.1052|
;;;472    		return PINSEL_RET_INVALID_PIN;
000416  480d              LDR      r0,|L1.1100|
                  |L1.1048|
;;;473    	if((type != PINSEL_PIN_TYPE_A ) &&
;;;474    		(type != PINSEL_PIN_TYPE_W ))
;;;475    		return PINSEL_RET_NOT_SUPPORT;
;;;476    
;;;477    	pPIN = PIN_GetPointer(portnum, pinnum);
;;;478    
;;;479    
;;;480    	if(enable)
;;;481    	{
;;;482    		*(uint32_t *)pPIN &= ~(IOCON_10ns_FILTER_DISABLE);//Clear 8th bit to 0
;;;483    	}
;;;484    	else
;;;485    	{
;;;486    		*(uint32_t *)pPIN |= (IOCON_10ns_FILTER_DISABLE);//Set 8th bit to one
;;;487    	}
;;;488    
;;;489    
;;;490    	return PINSEL_RET_OK;
;;;491    }
000418  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1052|
00041c  2d01              CMP      r5,#1                 ;473
00041e  d004              BEQ      |L1.1066|
000420  2d04              CMP      r5,#4                 ;474
000422  d002              BEQ      |L1.1066|
000424  4809              LDR      r0,|L1.1100|
000426  1c40              ADDS     r0,r0,#1              ;475
000428  e7f6              B        |L1.1048|
                  |L1.1066|
00042a  4641              MOV      r1,r8                 ;477
00042c  4638              MOV      r0,r7                 ;477
00042e  f7fffffe          BL       PIN_GetPointer
000432  4604              MOV      r4,r0                 ;477
000434  b126              CBZ      r6,|L1.1088|
000436  6820              LDR      r0,[r4,#0]            ;482
000438  f4207080          BIC      r0,r0,#0x100          ;482
00043c  6020              STR      r0,[r4,#0]            ;482
00043e  e003              B        |L1.1096|
                  |L1.1088|
000440  6820              LDR      r0,[r4,#0]            ;486
000442  f4407080          ORR      r0,r0,#0x100          ;486
000446  6020              STR      r0,[r4,#0]            ;486
                  |L1.1096|
000448  2000              MOVS     r0,#0                 ;490
00044a  e7e5              B        |L1.1048|
;;;492    /*********************************************************************//**
                          ENDP

                  |L1.1100|
                          DCD      0x10000001

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Drivers\\source\\lpc_pinsel.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_lpc_pinsel_c_179e972f____REV16|
#line 115 "..\\..\\..\\..\\Core\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_lpc_pinsel_c_179e972f____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_lpc_pinsel_c_179e972f____REVSH|
#line 129
|__asm___12_lpc_pinsel_c_179e972f____REVSH| PROC
#line 130

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
